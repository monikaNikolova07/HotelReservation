// <auto-generated />
using System;
using HotelReservations.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelReservations.Data.Migrations
{
    [DbContext(typeof(HotelReservationDBContext))]
    partial class HotelReservationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelReservations.Data.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            PhoneNumber = "+359881234567"
                        },
                        new
                        {
                            Id = 2,
                            Email = "peter.d@example.com",
                            Name = "Peter Dimitrov",
                            PhoneNumber = "+359888765432"
                        },
                        new
                        {
                            Id = 3,
                            Email = "maria.g@domain.bg",
                            Name = "Maria Georgieva",
                            PhoneNumber = "+359879999999"
                        });
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ул. Централна 1",
                            City = "Казанлък",
                            Name = "Хотел Роза"
                        },
                        new
                        {
                            Id = 2,
                            Address = "бул. България 42",
                            City = "Банско",
                            Name = "Гранд Пирин"
                        },
                        new
                        {
                            Id = 3,
                            Address = "ул. Морска 7",
                            City = "Варна",
                            Name = "Синя вила"
                        });
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2025, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 1,
                            RoomId = 2,
                            TotalPrice = 200m
                        },
                        new
                        {
                            Id = 2,
                            CheckInDate = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 2,
                            RoomId = 1,
                            TotalPrice = 100m
                        },
                        new
                        {
                            Id = 3,
                            CheckInDate = new DateTime(2025, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2025, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 3,
                            RoomId = 3,
                            TotalPrice = 300m
                        });
                });

            modelBuilder.Entity("HotelReservations.Data.Models.ReservationService", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ReservationServices");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            ReservationId = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            ReservationId = 3,
                            ServiceId = 3
                        });
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 2,
                            HotelId = 1,
                            PricePerNight = 99.99m,
                            RoomNumber = "101A"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 4,
                            HotelId = 2,
                            PricePerNight = 150.00m,
                            RoomNumber = "202B"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 1,
                            HotelId = 3,
                            PricePerNight = 75.50m,
                            RoomNumber = "303C"
                        });
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1",
                            Price = 2m
                        },
                        new
                        {
                            Id = 2,
                            Name = "2",
                            Price = 1m
                        },
                        new
                        {
                            Id = 3,
                            Name = "3",
                            Price = 3m
                        });
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Reservation", b =>
                {
                    b.HasOne("HotelReservations.Data.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservations.Data.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelReservations.Data.Models.ReservationService", b =>
                {
                    b.HasOne("HotelReservations.Data.Models.Reservation", "Reservation")
                        .WithMany("ReservationServices")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservations.Data.Models.Service", "Service")
                        .WithMany("ReservationServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Room", b =>
                {
                    b.HasOne("HotelReservations.Data.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Reservation", b =>
                {
                    b.Navigation("ReservationServices");
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelReservations.Data.Models.Service", b =>
                {
                    b.Navigation("ReservationServices");
                });
#pragma warning restore 612, 618
        }
    }
}
